{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatwebhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        112,
        64
      ],
      "id": "53db83f4-df36-4af1-8b7e-9fc889b6acda",
      "name": "Webhook",
      "webhookId": "9abe910f-6acc-4bc9-a970-7de47a3a23e5"
    },
    {
      "parameters": {
        "functionCode": "const query = $json[\"body\"]?.query?.toLowerCase() || \"\";\nlet context = \"\";\n\nif (query.includes(\"ai\")) {\n  context = \"AI stands for Artificial Intelligence, which involves machines simulating human intelligence.\";\n} else if (query.includes(\"n8n\")) {\n  context = \"n8n is a workflow automation tool enabling integration of multiple APIs and services easily.\";\n}\n\nreturn [{ json: { sessionId: $json[\"body\"].sessionId, query: $json[\"body\"].query, context } }];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        320,
        64
      ],
      "id": "d4d87a67-b6d1-403d-a9e0-2e351a03885e",
      "name": "Context Injection"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId ? $json.sessionId : 'anonymous' }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        624,
        272
      ],
      "id": "96c82057-b990-4190-afa5-13de13832651",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { answer: $json[\"output\"] || \"Sorry, I couldn't generate a response at this time.\" } }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        864,
        64
      ],
      "id": "e860b3b7-09de-440a-bc74-dc7044e15eb1",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "=You are Jarvis, a friendly personal AI assistant who learns continuously from each interaction, responds promptly, and always presents information and code in clean HTML format.\n\nBehavior guidelines:\n1. Greet users warmly and maintain an approachable tone.  \n2. Adapt over time: learn user preferences and apply them in future responses.  \n3. Handle any question or task independently without relying on external tools.  \n4. Always avoid fabricating informationâ€”if unsure, say you're not certain.  \n5. Structure responses in clean HTML format:  \n   - Use <h2>, <h3> for headings  \n   - Use <ol>, <ul>, <li> for lists  \n   - Use <pre><code> for ALL code blocks (commands, scripts, config files)\n   - Use <p> for paragraphs  \n   - Use <strong> for emphasis  \n   - Use <br> for line breaks where needed\n6. For ANY code, command, or technical snippet, ALWAYS wrap it in <pre><code>content</code></pre>\n7. Provide neat, executable code examples and explain each part.  \n8. End each response by asking if the user needs further assistance.\n\nIMPORTANT: \n- Always respond with valid HTML content, not markdown\n- ALL code must be in <pre><code> tags for copy functionality to work\n- Escape HTML characters properly in code examples using &lt; &gt; &amp;\n\nContext:\n{{$json.context || \"No additional context provided.\"}}\n\nConversation History:\n{{ $json.sessionId ? $json.sessionId : 'anonymous' }}\n\nUser's Question:\n{{$json.query}}\n\nRespond with a complete HTML-formatted answer with proper code formatting.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        528,
        64
      ],
      "id": "49504a93-845b-4dce-b66b-7a0164a52d8e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "anthropic/claude-3-haiku",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        432,
        272
      ],
      "id": "fb655803-9bfd-4163-a4b2-bcf00163d192",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "UIMcQS4TPfEqmqJn",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        528,
        272
      ],
      "id": "3201d7d7-fda8-40a7-935d-f325c3320bac",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "r6x3HfY6TJTM2P97",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Context Injection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Context Injection": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ac762d88c0646f4c1b2cb56f31b50ec61739154d706adbf289d192555a356ab7"
  }
}